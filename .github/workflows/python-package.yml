name: "Python package lint, test and upload coverage"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: "Checkout 🛎"
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: "Set up Python 🐍 ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: "Install dependencies 🔧"
        run: poetry install --no-interaction --no-ansi --sync --with lint,test

      - name: "Lint with flake8 🗒🖍"
        run: poetry run flake8

      - name: "Test with pytest ⚙🔧"
        run: poetry run pytest

      - name: "Generate Report 📑"
        run: poetry run pytest --cov=./  --cov-report=xml

      - name: "Upload Coverage to Codecov 📈💯"
        uses: codecov/codecov-action@v3
        with:
          env_vars: OS, PYTHON

  docs:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: "Checkout 🛎"
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: "Set up Python 🐍"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: "poetry"

      - name: "Install dependencies 🔧"
        run: poetry install --no-interaction --no-ansi --sync --with docs

      - name: "Build 🏗 end deploy 🚀 to GitHub pages."
        run: poetry run mkdocs gh-deploy --force --clean --verbose
