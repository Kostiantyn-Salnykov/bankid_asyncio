[tool.poetry]
name = "bankid_asyncio"
version = "0.0.2"
description = "BankID client for Python with asyncio support."
license = "MIT"
authors = ["Kostiantyn Salnykov <kostiantyn.salnykov@gmail.com>"]
maintainers = ["Kostiantyn Salnykov <kostiantyn.salnykov@gmail.com>"]
readme = "README.md"
repository = "https://github.com/Kostiantyn-Salnykov/bankid_asyncio/"
keywords = ["bankid", "client", "pydantic", "httpx"]
packages = [
    {include = "bankid_asyncio"},
]
classifiers = [
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.urls]
"Issues" = "https://github.com/Kostiantyn-Salnykov/bankid_asyncio/issues"
"Discussions" = "https://github.com/Kostiantyn-Salnykov/bankid_asyncio/discussions"

[tool.poetry.dependencies]
python = "^3.8"
httpx = "^0.23.0"
pydantic = "^1.9.2"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
isort = "^5.10.1"
tox = "^3.25.1"
pytest-sugar = "^0.9.5"
pytest-asyncio = "^0.19.0"
Faker = "^14.1.0"
pytest-cov = "^3.0.0"
pytest-mock = "^3.8.2"
pytest-randomly = "^3.12.0"
pytest-clarity = "^1.0.1"
freezegun = "^1.2.2"
fastapi = "^0.81.0"
uvicorn = {extras = ["standard"], version = "^0.18.3"}
pydantic = {extras = ["dotenv"], version = "^1.9.2"}
mypy = "^0.971"
flake8 = "^5.0.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
/(
  | dist
  | .pytest_cache
  | .tox
  | docs
  | docs_src
  | .venv
  | .mypy_cache
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.pytest.ini_options]
markers = [
    'debug: marks tests as debug (deselect with -m "not debug")',
]
#addopts = "--maxfail=1 -rf"
norecursedirs = ["venv", ".venv", ".env"]
testpaths = ["tests",]
pythonpath = ["."]
python_files = ["test*.py", "*test.py"]
python_functions = ["*_test", "test_*"]
console_output_style = "progress"
asyncio_mode = "auto"
log_cli = true

[tool.coverage.run]
parallel = true
branch = true
source = ["bankid_asyncio",]
omit = ["*/.local/*", "*/.idea/*", "*./venv/*", "*/test*", "*__init__*", "**interfaces.py"]

[tool.coverage.report]
#show_missing = true
ignore_errors = true
sort = "-Cover"
precision = 2
omit = ["*/.local/*", "*/.idea/*", "*./venv/*", "*/test*", "*__init__*", "**interfaces.py"]
exclude_lines = ["pragma: no cover", "if __name__ = .__main__.:"]

[tool.coverage.html]
directory = "coverage"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310
isolated_build = true

[testenv]
whitelist_externals = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run pytest tests/ --import-mode importlib
"""

[tool.mypy]
python_version = "3.8"
files = ['*.py', '**/*.py']
exclude = ["docs*", "coverage", "test"]
plugins = ["pydantic.mypy",]
no_site_packages = true
follow_imports = "skip"
ignore_missing_imports = true
strict_optional = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
no_implicit_optional = true
disallow_untyped_defs = true
#disallow_any_unimported = true
